(function() {var implementors = {};
implementors["locha_p2p"] = [{"text":"impl Unpin for Identity","synthetic":true,"types":[]},{"text":"impl Unpin for Behaviour","synthetic":true,"types":[]},{"text":"impl Unpin for BehaviourEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Runtime","synthetic":true,"types":[]},{"text":"impl Unpin for RuntimeConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RuntimeEventsLogger&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UpnpBehaviour","synthetic":true,"types":[]},{"text":"impl Unpin for Msg","synthetic":true,"types":[]},{"text":"impl Unpin for MessageData","synthetic":true,"types":[]},{"text":"impl Unpin for Content","synthetic":true,"types":[]}];
implementors["locha_p2pd"] = [{"text":"impl Unpin for EventsHandler","synthetic":true,"types":[]},{"text":"impl Unpin for Arguments","synthetic":true,"types":[]}];
implementors["miniupnpc"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceList","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Unpin for DeviceListIter&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Unpin for Device&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ValidIgd","synthetic":true,"types":[]},{"text":"impl Unpin for Urls","synthetic":true,"types":[]},{"text":"impl Unpin for IgdData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IgdService&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LocalPort","synthetic":true,"types":[]},{"text":"impl Unpin for StatusInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Protocol","synthetic":true,"types":[]}];
implementors["miniupnpc_sys"] = [{"text":"impl Unpin for IGDdatas_service","synthetic":true,"types":[]},{"text":"impl Unpin for IGDdatas","synthetic":true,"types":[]},{"text":"impl Unpin for UPNPDev","synthetic":true,"types":[]},{"text":"impl Unpin for UPNParg","synthetic":true,"types":[]},{"text":"impl Unpin for UPNPUrls","synthetic":true,"types":[]},{"text":"impl Unpin for PortMappingParserData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()