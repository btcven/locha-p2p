(function() {var implementors = {};
implementors["locha_p2p"] = [{"text":"impl Freeze for Identity","synthetic":true,"types":[]},{"text":"impl Freeze for Behaviour","synthetic":true,"types":[]},{"text":"impl Freeze for BehaviourEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Runtime","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RuntimeEventsLogger&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UpnpBehaviour","synthetic":true,"types":[]},{"text":"impl Freeze for Msg","synthetic":true,"types":[]},{"text":"impl Freeze for MessageData","synthetic":true,"types":[]},{"text":"impl Freeze for Content","synthetic":true,"types":[]}];
implementors["locha_p2pd"] = [{"text":"impl Freeze for EventsHandler","synthetic":true,"types":[]},{"text":"impl Freeze for Arguments","synthetic":true,"types":[]}];
implementors["miniupnpc"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceList","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Freeze for DeviceListIter&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Freeze for Device&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ValidIgd","synthetic":true,"types":[]},{"text":"impl Freeze for Urls","synthetic":true,"types":[]},{"text":"impl Freeze for IgdData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IgdService&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LocalPort","synthetic":true,"types":[]},{"text":"impl Freeze for StatusInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]}];
implementors["miniupnpc_sys"] = [{"text":"impl Freeze for IGDdatas_service","synthetic":true,"types":[]},{"text":"impl Freeze for IGDdatas","synthetic":true,"types":[]},{"text":"impl Freeze for UPNPDev","synthetic":true,"types":[]},{"text":"impl Freeze for UPNParg","synthetic":true,"types":[]},{"text":"impl Freeze for UPNPUrls","synthetic":true,"types":[]},{"text":"impl Freeze for PortMappingParserData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()