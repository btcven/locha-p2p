(function() {var implementors = {};
implementors["locha_p2p"] = [{"text":"impl Send for Identity","synthetic":true,"types":[]},{"text":"impl Send for Behaviour","synthetic":true,"types":[]},{"text":"impl Send for BehaviourEvent","synthetic":true,"types":[]},{"text":"impl Send for Runtime","synthetic":true,"types":[]},{"text":"impl Send for RuntimeConfig","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RuntimeEventsLogger&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for UpnpBehaviour","synthetic":true,"types":[]},{"text":"impl Send for Msg","synthetic":true,"types":[]},{"text":"impl Send for MessageData","synthetic":true,"types":[]},{"text":"impl Send for Content","synthetic":true,"types":[]}];
implementors["locha_p2pd"] = [{"text":"impl Send for EventsHandler","synthetic":true,"types":[]},{"text":"impl Send for Arguments","synthetic":true,"types":[]}];
implementors["miniupnpc"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; !Send for DeviceListIter&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl Send for ValidIgd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IgdService&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for LocalPort","synthetic":true,"types":[]},{"text":"impl Send for StatusInfo","synthetic":true,"types":[]},{"text":"impl Send for Protocol","synthetic":true,"types":[]},{"text":"impl Send for DeviceList","synthetic":false,"types":[]},{"text":"impl&lt;'list&gt; Send for Device&lt;'list&gt;","synthetic":false,"types":[]},{"text":"impl Send for Urls","synthetic":false,"types":[]},{"text":"impl Send for IgdData","synthetic":false,"types":[]}];
implementors["miniupnpc_sys"] = [{"text":"impl Send for IGDdatas_service","synthetic":true,"types":[]},{"text":"impl Send for IGDdatas","synthetic":true,"types":[]},{"text":"impl !Send for UPNPDev","synthetic":true,"types":[]},{"text":"impl !Send for UPNParg","synthetic":true,"types":[]},{"text":"impl !Send for UPNPUrls","synthetic":true,"types":[]},{"text":"impl Send for PortMappingParserData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()