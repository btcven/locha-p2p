(function() {var implementors = {};
implementors["locha_p2p"] = [{"text":"impl NetworkBehaviour for Behaviour <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Toggle&lt;Mdns&gt;: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Toggle&lt;Mdns&gt; as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Kademlia&lt;MemoryStore&gt;: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Kademlia&lt;MemoryStore&gt; as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Gossipsub: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Gossipsub as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Toggle&lt;UpnpBehaviour&gt;: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Toggle&lt;UpnpBehaviour&gt; as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Identify: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Identify as NetworkBehaviour&gt;::OutEvent&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl NetworkBehaviour for UpnpBehaviour","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()